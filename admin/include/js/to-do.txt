var sections = tom array. 

funktion för att lägga till sektioner i sections. 

Varje sektion kommer representeras av ett objekt. Det objektet har nycklar.

Representera datan internt på ett sätt, och externt på annat.

Internt:
Sektion:
- nycket = id.
- Nyckel = rows.
- nyckel = totalSeats,
- 


add row to section.

En knapp för att lägga till sektioner, 
En knapp för att lägga till rader, 
En knapp för att ta bort rader.
En knapp för att ta bort sektioner.



Skapa arena:
 - namn,
 - plats,
 - antal platser.


 Skapa sektion (vet vilken arena):
 Lägg till antal sektioner [ x ];
 

 _NAMN_ -- _INGÅNG_ -- _antal platser_ 
1.                                          [ TA BORT ]
___________________________________________
2.                                          [ TA BORT ]
___________________________________________
3.                                          [ TA BORT ]
___________________________________________
4.                                          [ TA BORT ]
___________________________________________

 Skapa rader:

 Sektionnamn1: Välj antal rader [x];
 Sektionnamn2: Välj antal rader [x];
 Sektionnamn3: Välj antal rader [x];
 Sektionnamn4: Välj antal rader [x];
 
 Visa rader; 



EN funktion som skapar flera section: createSections.
    I funktionen:
        - Argument:
            * Hur många sektioner. 
            * 
            * 
        - Loop.
        -

En funktion som skapar en section: createSection. 




Så vi behöver en funktion som:
- skapar sektioner,
-  en funktion som skapar en sektion,
-  en funktion som tar bort vald sektion.

Sen behöver vi en funktion som
- skapar rader, 
- skapar en rad, 
- tar bort vald rad. 

funktionen som skapar rader kanske ska ta en sektion som argument? 
eller function -___ () {
    för varje sektion ska vi hämta antalet rader, och skapa de. 
}








Phase 1:
- Arena namn
- kapacitet,
- adress,
- postkod,
- postort,
- region. 

Phase 2:
- sektioner,
- entreer,
- antal seats.

Phase 3
- 
- Antal rader på sektioner.
- Antal platser på raderna. 

Phase 4
- Visa information om den data vi har hämtat. 

Så vi vill hämta data och skriva ut data. 

VI behöver inte skicka med data, vi behöver bara visa data. Innan vi är framme dvs.

Så vi behöver att sektionerna 


Göra till cookies: 

OBJEKT:
- arena




Tanken:


Tanken är att vi ska för varje del i formuläret ska:
- Hämta och lagra data som objekt.
- Lagra data i en cookie med hjälp av JSON.stringify.

Så då har vi en funktion som skapar inputsen. 
En funktion som hämtar värdena från dessa inputs och lagrar de i en cookie. 



Sen när allt är klart och man ahar skapat arenan, då tar vi bort cookies. 




Tanken: 
Hämta all data med PHP-istället. 


Kan vi när vi hämtar datan, pusha in inputData till many_inputDatas, 
om vi gör detta så kommer vi ha lika många arrayer som sektioner,
sen kan vi inserta varje sektion". 

Så: 


function insert_rows ($nrOfSections = 0, $last_arenaId = 0) 
{
    $many_inputData = [];
    // columnNames innehåller alla kolumner.  
    foreach($this->columnNames as $elem) 
    {
        if($this->table == 'arenaSections') 
        {
            if($elem == 'arenaId') 
            {

                echo "<br>Arenans Id är följande: $last_arenaId";
                var_dump($last_arenaId);
                $inputData[] = $last_arenaId;                   
            }
            if($elem != 'arenaId') 
            {
                for($i = 0;$i < $nrOfSections; $i++) 
                {
                    // looped_elem
                    $looped_elem = $elem . '_' . $i;
                    $inputData = filter_input(INPUT_POST, $looped_elem, FILTER_SANITIZE_MAGIC_QUOTES);

                    $many_inputData[i].push($inputData);
                }
            }
        }
    }

    // och sen:
    $section_id = [];
    foreach($many_inputData as $one_row) {

        $row_i = 0;
        if($this->table == 'arenaSections') {
            array_unshift($many_inputData[row_i], $last_arenaId);
        }
        elseif($this->table == 'arenaSectionRows') {
            // oklart. 
        }
        $row_i++;

        $i = 1;
        foreach($one_row as $value) {
            $stmt->bindValue($i, $value);
            $i++;
        }
        
        $stmt->execute();   
        $section_id [] = $this->_db->lastInsertId();
    }
    return $section_id;

}




Hur får jag in sektionernas Id till raderna? 
Ska jag istället hämta sektionernas antal rader, och sedan skapa rader med den sektionen?
Okej, om vi skulle göra så, hur skulle vi hämta sektionen? 

för varje sektion - sen loopar vi igenom antalet rader. 

Finns det någon anledning till att loopa igenom sektions id? 


$nr_of_rows_i = 0;
// för varje sektion id vill vi hämta hur många rader som skapades i den sektionen. 
foreach(sektion_id_arr as sektionId) {

        // för varje kolumn i databasen.
        // alltså: arenaSectionId, row_number, nrOfSeats. 
        foreach($this->columnNames as $elem) {
        
        $nrOfRowsVar = 'nr_of_rows_' . $nr_of_rows_i;
        $nrOfRows = filter_input(INPUT_POST, $nrOfRowsVar, FILTER_SANITIZE_MAGIC_QUOTES);


        for($i = 0; $i < nrOfRows; i++) {
            $looped_elem = $elem . '_' . $i;

            $inputData = filter_input(INPUT_POST, $looped_elem, FILTER_SANITIZE_MAGIC_QUOTES);


            $many_rows->$i [] = $inputData;         
        }

    $nr_of_rows_i++;
    }
}